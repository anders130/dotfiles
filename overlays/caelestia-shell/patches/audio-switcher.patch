diff --git a/config/BarConfig.qml b/config/BarConfig.qml
index 498b2f5..5ef8ccb 100644
--- a/config/BarConfig.qml
+++ b/config/BarConfig.qml
@@ -22,6 +22,7 @@ JsonObject {
 
     component Status: JsonObject {
         property bool showAudio: false
+        property bool showAudioSwitcher: true
         property bool showKbLayout: false
         property bool showNetwork: true
         property bool showBluetooth: true
diff --git a/modules/bar/components/StatusIcons.qml b/modules/bar/components/StatusIcons.qml
index c364d6b..62690f5 100644
--- a/modules/bar/components/StatusIcons.qml
+++ b/modules/bar/components/StatusIcons.qml
@@ -1,6 +1,7 @@
 pragma ComponentBehavior: Bound
 
 import qs.components
+import qs.components.controls
 import qs.services
 import qs.utils
 import qs.config
@@ -63,6 +64,33 @@ Item {
             }
         }
 
+        // Audio switcher
+        Loader {
+            id: audioSwitcher
+
+            Layout.alignment: Qt.AlignHCenter
+            asynchronous: true
+            active: Config.bar.status.showAudioSwitcher
+            visible: active
+
+            sourceComponent: CustomMouseArea {
+                id: audioSwitcherArea
+
+                implicitWidth: icon.implicitWidth
+                implicitHeight: icon.implicitHeight
+
+                onClicked: Audio.toggleAudioPort()
+
+                MaterialIcon {
+                    id: icon
+                    anchors.centerIn: parent
+                    animate: true
+                    text: Audio.isHeadphonesIcon ? "headphones" : "speaker"
+                    color: root.colour
+                }
+            }
+        }
+
         // Keyboard layout icon
         Loader {
             id: kbLayout
diff --git a/services/Audio.qml b/services/Audio.qml
index e156e6e..eaf57b4 100644
--- a/services/Audio.qml
+++ b/services/Audio.qml
@@ -3,10 +3,30 @@ pragma Singleton
 import qs.config
 import Quickshell
 import Quickshell.Services.Pipewire
+import QtQuick
+import Quickshell.Io
 
 Singleton {
     id: root
 
+    Process {
+        id: audioPortProcess
+        command: ["pactl", "list", "sinks"]
+        stdout: StdioCollector {
+            onStreamFinished: {
+                if (text.includes("Active Port: analog-output-headphones")) {
+                    isHeadphonesIcon = true;
+                } else if (text.includes("Active Port: analog-output-lineout")) {
+                    isHeadphonesIcon = false;
+                }
+            }
+        }
+    }
+
+    function init() {
+        audioPortProcess.running = true;
+    }
+
     readonly property var nodes: Pipewire.nodes.values.reduce((acc, node) => {
         if (!node.isStream) {
             if (node.isSink)
@@ -52,7 +72,21 @@ Singleton {
         Pipewire.preferredDefaultAudioSource = newSource;
     }
 
+    property bool isHeadphonesIcon: false
+
+    function toggleAudioPort(): void {
+        const speakers = "analog-output-lineout";
+        const headphones = "analog-output-headphones";
+
+        const newPort = root.isHeadphonesIcon ? speakers : headphones;
+        root.isHeadphonesIcon = !root.isHeadphonesIcon;
+
+        Quickshell.execDetached(["pactl", "set-sink-port", "@DEFAULT_SINK@", newPort]);
+    }
+
     PwObjectTracker {
         objects: [...root.sinks, ...root.sources]
     }
+
+    Component.onCompleted: init()
 }
